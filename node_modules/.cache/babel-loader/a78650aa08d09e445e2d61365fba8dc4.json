{"ast":null,"code":"var _jsxFileName = \"/home/rohith/Documents/Projects/keeps-backend/client/src/ApolloProvider.js\";\nimport React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { grey } from \"@material-ui/core/colors\";\nvar httpLink = createHttpLink({\n  uri: \"http://localhost:5000\"\n});\nvar theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    text: {\n      primary: grey[300]\n    }\n  }\n});\nvar authLink = setContext(function () {\n  var token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? \"Bearer \".concat(token) : \"\"\n    }\n  };\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ThemeProvider, {\n  theme: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CssBaseline, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/home/rohith/Documents/Projects/keeps-backend/client/src/ApolloProvider.js"],"names":["React","App","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","setContext","createMuiTheme","ThemeProvider","CssBaseline","grey","httpLink","uri","theme","palette","text","primary","authLink","token","localStorage","getItem","headers","Authorization","client","link","concat","cache"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,IAAMC,QAAQ,GAAGP,cAAc,CAAC;AAC9BQ,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,IAAMC,KAAK,GAAGN,cAAc,CAAC;AAC3BO,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEN,IAAI,CAAC,GAAD;AADT;AAFC;AADkB,CAAD,CAA5B;AASA,IAAMO,QAAQ,GAAGX,UAAU,CAAC,YAAM;AAChC,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEJ,KAAK,oBAAaA,KAAb,IAAuB;AADpC;AADJ,GAAP;AAKD,CAP0B,CAA3B;AASA,IAAMK,MAAM,GAAG,IAAIrB,YAAJ,CAAiB;AAC9BsB,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBd,QAAhB,CADwB;AAE9Be,EAAAA,KAAK,EAAE,IAAIvB,aAAJ;AAFuB,CAAjB,CAAf;AAKA,4BACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEoB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF","sourcesContent":["import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000\",\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    text: {\n      primary: grey[300],\n    },\n  },\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}