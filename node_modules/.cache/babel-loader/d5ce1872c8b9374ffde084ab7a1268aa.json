{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/rohith/Documents/Projects/keeps-backend/client/src/components/note-input-card/note-input-card.component.jsx\",\n    _templateObject;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport gql from \"graphql-tag\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../../utils/hooks\";\nimport { FETCH_NOTE_QUERY } from \"../../utils/graphql\";\nvar useStyles = makeStyles({\n  root: {\n    // \"& .MuiTextField-root\": {\n    //   width: \"45ch\",\n    // },\n    // \"& .MuiInputBase-root\": {\n    //   width: \"45ch\",\n    // },\n    minWidth: 275,\n    paddingBottom: 1,\n    boxShadow: \"none\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 2\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\"\n  }\n});\nexport default function NoteInputCard() {\n  var _useForm = useForm(createNoteCallback, {\n    title: \"\",\n    body: \"\"\n  }),\n      values = _useForm.values,\n      onChange = _useForm.onChange,\n      onSubmit = _useForm.onSubmit;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1]; //expansion state of the card\n\n\n  var ref = useRef(null); // reference to tag to expand and compress\n\n  var classes = useStyles();\n\n  var _useMutation = useMutation(CREATE_NOTE_MUTATION, {\n    variables: values,\n    update: function update(proxy, result) {\n      var data = proxy.readQuery({\n        query: FETCH_NOTE_QUERY\n      });\n      data.getPosts = [result.data.createPost].concat(_toConsumableArray(data.getPosts));\n      proxy.writeQuery({\n        query: FETCH_NOTE_QUERY,\n        data: data\n      });\n      values.body = \"\";\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createNote = _useMutation2[0],\n      error = _useMutation2[1].error;\n\n  function createNoteCallback() {\n    createNote();\n  } //save the card data\n\n\n  useEffect(function () {\n    document.addEventListener(\"click\", compressCard, true);\n    return function () {\n      document.removeEventListener(\"click\", compressCard, true);\n    };\n  }); //adding listner on mount for clicks\n\n  var compressCard = function compressCard(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      if (expanded === true) {\n        setExpanded(false);\n      }\n    }\n  }; //compress Input card on outside click\n\n\n  var expandCard = function expandCard() {\n    setExpanded(true);\n  }; // Express input card on click\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    alignitems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.expand, _defineProperty({}, classes.expandOpen, expanded)),\n    onClick: expandCard,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"Title\",\n    label: \"Title\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"title\",\n    value: values.title,\n    error: error ? true : false,\n    onChange: onChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note_text\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    multilinef: true,\n    id: \"body\",\n    label: \"input note here\",\n    variant: \"outlined\",\n    rows: 4,\n    required: true,\n    fullWidth: true,\n    name: \"body\",\n    value: values.body,\n    error: error ? true : false,\n    onChange: onChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n}\nvar CREATE_NOTE_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation createNote($title: String!, $body: String!) {\\n    id\\n    title\\n    body\\n    createAt\\n    username\\n  }\\n\"])));","map":{"version":3,"sources":["/home/rohith/Documents/Projects/keeps-backend/client/src/components/note-input-card/note-input-card.component.jsx"],"names":["React","useState","useEffect","useRef","gql","makeStyles","Card","CardActions","Collapse","clsx","Button","TextField","useMutation","useForm","FETCH_NOTE_QUERY","useStyles","root","minWidth","paddingBottom","boxShadow","bullet","display","margin","transform","title","fontSize","pos","marginBottom","expand","marginLeft","NoteInputCard","createNoteCallback","body","values","onChange","onSubmit","expanded","setExpanded","ref","classes","CREATE_NOTE_MUTATION","variables","update","proxy","result","data","readQuery","query","getPosts","createPost","writeQuery","createNote","error","document","addEventListener","compressCard","removeEventListener","event","current","contains","target","expandCard","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport gql from \"graphql-tag\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../../utils/hooks\";\nimport { FETCH_NOTE_QUERY } from \"../../utils/graphql\";\n\nconst useStyles = makeStyles({\n  root: {\n    // \"& .MuiTextField-root\": {\n    //   width: \"45ch\",\n    // },\n    // \"& .MuiInputBase-root\": {\n    //   width: \"45ch\",\n    // },\n    minWidth: 275,\n    paddingBottom: 1,\n    boxShadow: \"none\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 2,\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n  },\n});\n\nexport default function NoteInputCard() {\n  const { values, onChange, onSubmit } = useForm(createNoteCallback, {\n    title: \"\",\n    body: \"\",\n  });\n  const [expanded, setExpanded] = useState(false); //expansion state of the card\n  const ref = useRef(null); // reference to tag to expand and compress\n  const classes = useStyles();\n\n  const [createNote, { error }] = useMutation(CREATE_NOTE_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_NOTE_QUERY,\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({ query: FETCH_NOTE_QUERY, data });\n      values.body = \"\";\n    },\n  });\n\n  function createNoteCallback() {\n    createNote();\n  } //save the card data\n\n  useEffect(() => {\n    document.addEventListener(\"click\", compressCard, true);\n    return () => {\n      document.removeEventListener(\"click\", compressCard, true);\n    };\n  }); //adding listner on mount for clicks\n\n  const compressCard = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      if (expanded === true) {\n        setExpanded(false);\n      }\n    }\n  }; //compress Input card on outside click\n\n  const expandCard = () => {\n    setExpanded(true);\n  }; // Express input card on click\n\n  return (\n    <Card className={classes.root} alignitems=\"center\">\n      <CardActions disableSpacing>\n        <div\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={expandCard}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <TextField\n            id=\"Title\"\n            label=\"Title\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"title\"\n            value={values.title}\n            error={error ? true : false}\n            onChange={onChange}\n            autoFocus\n          />\n        </div>\n      </CardActions>\n      <div className=\"note_text\" ref={ref}>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          {/* <center> */}\n          <TextField\n            multilinef\n            id=\"body\"\n            label=\"input note here\"\n            variant=\"outlined\"\n            rows={4}\n            required\n            fullWidth\n            name=\"body\"\n            value={values.body}\n            error={error ? true : false}\n            onChange={onChange}\n            autoFocus\n          />\n          {/* </center> */}\n          <Button onClick={onSubmit}>Add</Button>\n        </Collapse>\n      </div>\n    </Card>\n  );\n}\n\nconst CREATE_NOTE_MUTATION = gql`\n  mutation createNote($title: String!, $body: String!) {\n    id\n    title\n    body\n    createAt\n    username\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}