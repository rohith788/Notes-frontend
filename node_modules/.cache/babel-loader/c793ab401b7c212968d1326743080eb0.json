{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/rohith/Documents/Projects/keeps-backend/client/src/components/note-input-card/note-input-card.component.jsx\",\n    _templateObject;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport gql from \"graphql-tag\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../../utils/hooks\";\nimport { FETCH_NOTES_QUERY } from \"../../utils/graphql\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n        width: theme.spacing(16),\n        height: theme.spacing(16)\n      }\n    },\n    paper_size: {\n      minWidth: 550,\n      marginTop: theme.spacing(1)\n    },\n    \"& .MuiTextField-root\": {// margin: theme.spacing(1),\n      // width: \"50ch\",\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\"\n    }\n  };\n});\nexport default function NoteInputCard() {\n  var _React$createElement;\n\n  var _useForm = useForm(createNoteCallback, {\n    title: \"\",\n    body: \"\"\n  }),\n      values = _useForm.values,\n      onChange = _useForm.onChange,\n      onSubmit = _useForm.onSubmit;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1]; //expansion state of the card\n\n\n  var ref = useRef(null); // reference to tag to expand and compress\n\n  var classes = useStyles();\n\n  var _useMutation = useMutation(CREATE_NOTE_MUTATION, {\n    variables: values,\n    update: function update(proxy, result) {\n      var data = proxy.readQuery({\n        query: FETCH_NOTES_QUERY\n      });\n      proxy.writeQuery({\n        query: FETCH_NOTES_QUERY,\n        data: {\n          getNotes: [result.data.createNote].concat(_toConsumableArray(data.getNotes))\n        }\n      });\n      values.body = \"\";\n      values.title = \"\";\n    },\n    onError: function onError(err) {\n      return err;\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createNote = _useMutation2[0],\n      error = _useMutation2[1].error;\n\n  function createNoteCallback() {\n    createNote();\n  } //save the card data\n\n\n  useEffect(function () {\n    document.addEventListener(\"click\", compressCard, true);\n    return function () {\n      document.removeEventListener(\"click\", compressCard, true);\n    };\n  }); //adding listner on mount for clicks\n\n  var compressCard = function compressCard(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      if (expanded === true) {\n        setExpanded(false);\n      }\n    }\n  }; //compress Input card on outside click\n\n\n  var expandCard = function expandCard() {\n    setExpanded(true);\n  }; // Express input card on click\n\n\n  var oncomp = function oncomp(event) {\n    event.target.setAttribute(\"autocomplete\", \"off\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Card className={classes.root}>\n    React.createElement(Paper, {\n      elevation: 0,\n      className: classes.paper_size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.expand, _defineProperty({}, classes.expandOpen, expanded)),\n      onClick: expandCard,\n      \"aria-expanded\": expanded,\n      \"aria-label\": \"show more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"Title\",\n      label: \"Title\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      name: \"title\",\n      value: values.title,\n      error: error ? true : false,\n      onChange: onChange,\n      onFocus: oncomp,\n      autoFocus: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note_text\",\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, (_React$createElement = {\n      multiline: true,\n      rows: 4,\n      variant: \"outlined\"\n    }, _defineProperty(_React$createElement, \"rows\", 4), _defineProperty(_React$createElement, \"label\", \"input note here\"), _defineProperty(_React$createElement, \"name\", \"body\"), _defineProperty(_React$createElement, \"value\", values.body), _defineProperty(_React$createElement, \"error\", error ? true : false), _defineProperty(_React$createElement, \"onChange\", onChange), _defineProperty(_React$createElement, \"fullWidth\", true), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }), _React$createElement))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Add\"))))))\n  );\n}\nvar CREATE_NOTE_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation createNote($title: String!, $body: String!) {\\n    createNote(title: $title, body: $body) {\\n      id\\n      title\\n      body\\n      createdAt\\n      username\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/home/rohith/Documents/Projects/keeps-backend/client/src/components/note-input-card/note-input-card.component.jsx"],"names":["React","useState","useEffect","useRef","gql","makeStyles","Collapse","clsx","Button","TextField","Paper","useMutation","useForm","FETCH_NOTES_QUERY","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","paper_size","minWidth","marginTop","expand","transform","marginLeft","NoteInputCard","createNoteCallback","title","body","values","onChange","onSubmit","expanded","setExpanded","ref","classes","CREATE_NOTE_MUTATION","variables","update","proxy","result","data","readQuery","query","writeQuery","getNotes","createNote","onError","err","error","document","addEventListener","compressCard","removeEventListener","event","current","contains","target","expandCard","oncomp","setAttribute","expandOpen"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAACU,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAIJ,eAAS;AACPC,QAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADD;AAEPC,QAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFA;AAGPE,QAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,EAAd;AAHD;AAJL,KADiC;AAWvCG,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,SAAS,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd;AAFD,KAX2B;AAevC,4BAAwB,CACtB;AACA;AAFsB,KAfe;AAmBvCM,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,cADL;AAENC,MAAAA,UAAU,EAAE;AAFN;AAnB+B,GAAZ;AAAA,CAAD,CAA5B;AAyBA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAAA,iBACCjB,OAAO,CAACkB,kBAAD,EAAqB;AACjEC,IAAAA,KAAK,EAAE,EAD0D;AAEjEC,IAAAA,IAAI,EAAE;AAF2D,GAArB,CADR;AAAA,MAC9BC,MAD8B,YAC9BA,MAD8B;AAAA,MACtBC,QADsB,YACtBA,QADsB;AAAA,MACZC,QADY,YACZA,QADY;;AAAA,kBAKNlC,QAAQ,CAAC,KAAD,CALF;AAAA;AAAA,MAK/BmC,QAL+B;AAAA,MAKrBC,WALqB,kBAKW;;;AACjD,MAAMC,GAAG,GAAGnC,MAAM,CAAC,IAAD,CAAlB,CANsC,CAMZ;;AAC1B,MAAMoC,OAAO,GAAGzB,SAAS,EAAzB;;AAPsC,qBASNH,WAAW,CAAC6B,oBAAD,EAAuB;AAChEC,IAAAA,SAAS,EAAER,MADqD;AAEhES,IAAAA,MAFgE,kBAEzDC,KAFyD,EAElDC,MAFkD,EAE1C;AACpB,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAC3BC,QAAAA,KAAK,EAAElC;AADoB,OAAhB,CAAb;AAGA8B,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAElC,iBADQ;AAEfgC,QAAAA,IAAI,EAAE;AAAEI,UAAAA,QAAQ,GAAGL,MAAM,CAACC,IAAP,CAAYK,UAAf,4BAA8BL,IAAI,CAACI,QAAnC;AAAV;AAFS,OAAjB;AAIAhB,MAAAA,MAAM,CAACD,IAAP,GAAc,EAAd;AACAC,MAAAA,MAAM,CAACF,KAAP,GAAe,EAAf;AACD,KAZ+D;AAahEoB,IAAAA,OAbgE,mBAaxDC,GAbwD,EAanD;AACX,aAAOA,GAAP;AACD;AAf+D,GAAvB,CATL;AAAA;AAAA,MAS/BF,UAT+B;AAAA,MASjBG,KATiB,oBASjBA,KATiB;;AA2BtC,WAASvB,kBAAT,GAA8B;AAC5BoB,IAAAA,UAAU;AACX,GA7BqC,CA6BpC;;;AAEFhD,EAAAA,SAAS,CAAC,YAAM;AACdoD,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,YAAnC,EAAiD,IAAjD;AACA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,YAAtC,EAAoD,IAApD;AACD,KAFD;AAGD,GALQ,CAAT,CA/BsC,CAoClC;;AAEJ,MAAMA,YAAY,GAAG,SAAfA,YAAe,CAACE,KAAD,EAAW;AAC9B,QAAIpB,GAAG,CAACqB,OAAJ,IAAe,CAACrB,GAAG,CAACqB,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD,UAAIzB,QAAQ,KAAK,IAAjB,EAAuB;AACrBC,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF;AACF,GAND,CAtCsC,CA4CnC;;;AAEH,MAAMyB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBzB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD,CA9CsC,CAgDnC;;;AAEH,MAAM0B,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAW;AACxBA,IAAAA,KAAK,CAACG,MAAN,CAAaG,YAAb,CAA0B,cAA1B,EAA0C,KAA1C;AACD,GAFD;;AAIA;AAAA;AACE;AACA,wBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,SAAS,EAAEzB,OAAO,CAAChB,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAEhB,IAAI,CAACgC,OAAO,CAACb,MAAT,sBACZa,OAAO,CAAC0B,UADI,EACS7B,QADT,EADjB;AAIE,MAAA,OAAO,EAAE0B,UAJX;AAKE,uBAAe1B,QALjB;AAME,oBAAW,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,MAAM,EAAC,QAJT;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEH,MAAM,CAACF,KANhB;AAOE,MAAA,KAAK,EAAEsB,KAAK,GAAG,IAAH,GAAU,KAPxB;AAQE,MAAA,QAAQ,EAAEnB,QARZ;AASE,MAAA,OAAO,EAAE6B,MATX;AAUE,MAAA,SAAS,MAVX;AAWE,MAAA,SAAS,MAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,eAuBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEzB,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEF,QAAd;AAAwB,MAAA,OAAO,EAAC,MAAhC;AAAuC,MAAA,aAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,OAAO,EAAC;AAHV,qDAIQ,CAJR,kDAKQ,iBALR,iDAMO,MANP,kDAOSH,MAAM,CAACD,IAPhB,kDAQSqB,KAAK,GAAG,IAAH,GAAU,KARxB,qDASYnB,QATZ;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAfF,CADF,CAvBF,CAFF;AAFF;AAoDD;AAED,IAAMK,oBAAoB,GAAGpC,GAAH,+PAA1B","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport gql from \"graphql-tag\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../../utils/hooks\";\nimport { FETCH_NOTES_QUERY } from \"../../utils/graphql\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  paper_size: {\n    minWidth: 550,\n    marginTop: theme.spacing(1),\n  },\n  \"& .MuiTextField-root\": {\n    // margin: theme.spacing(1),\n    // width: \"50ch\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n  },\n}));\n\nexport default function NoteInputCard() {\n  const { values, onChange, onSubmit } = useForm(createNoteCallback, {\n    title: \"\",\n    body: \"\",\n  });\n  const [expanded, setExpanded] = useState(false); //expansion state of the card\n  const ref = useRef(null); // reference to tag to expand and compress\n  const classes = useStyles();\n\n  const [createNote, { error }] = useMutation(CREATE_NOTE_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_NOTES_QUERY,\n      });\n      proxy.writeQuery({\n        query: FETCH_NOTES_QUERY,\n        data: { getNotes: [result.data.createNote, ...data.getNotes] },\n      });\n      values.body = \"\";\n      values.title = \"\";\n    },\n    onError(err) {\n      return err;\n    },\n  });\n\n  function createNoteCallback() {\n    createNote();\n  } //save the card data\n\n  useEffect(() => {\n    document.addEventListener(\"click\", compressCard, true);\n    return () => {\n      document.removeEventListener(\"click\", compressCard, true);\n    };\n  }); //adding listner on mount for clicks\n\n  const compressCard = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      if (expanded === true) {\n        setExpanded(false);\n      }\n    }\n  }; //compress Input card on outside click\n\n  const expandCard = () => {\n    setExpanded(true);\n  }; // Express input card on click\n\n  const oncomp = (event) => {\n    event.target.setAttribute(\"autocomplete\", \"off\");\n  };\n\n  return (\n    // <Card className={classes.root}>\n    <Paper elevation={0} className={classes.paper_size}>\n      {/* <CardActions> */}\n      <div>\n        <div\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={expandCard}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <TextField\n            id=\"Title\"\n            label=\"Title\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            name=\"title\"\n            value={values.title}\n            error={error ? true : false}\n            onChange={onChange}\n            onFocus={oncomp}\n            autoFocus\n            fullWidth\n          />\n        </div>\n        <div className=\"note_text\" ref={ref}>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <div>\n              <TextField\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                rows={4}\n                label=\"input note here\"\n                name=\"body\"\n                value={values.body}\n                error={error ? true : false}\n                onChange={onChange}\n                fullWidth\n              />\n            </div>\n            <div>\n              <Button onClick={onSubmit}>Add</Button>\n            </div>\n          </Collapse>\n        </div>\n      </div>\n      {/* </Card> */}\n    </Paper>\n  );\n}\n\nconst CREATE_NOTE_MUTATION = gql`\n  mutation createNote($title: String!, $body: String!) {\n    createNote(title: $title, body: $body) {\n      id\n      title\n      body\n      createdAt\n      username\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}