{"ast":null,"code":"import _slicedToArray from \"/home/rohith/Documents/Projects/keeps-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rohith/Documents/Projects/keeps-backend/client/src/context/darkTheme.js\";\n\nimport React, { useState, createContext } from \"react\"; // import { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\nvar defaultState = {\n  dark: false,\n  toggleDark: function toggleDark() {}\n};\nvar darkness = false;\n\nif (localStorage.getItem(\"darkTheme\")) {\n  darkness = localStorage.getItem(\"darkTheme\");\n}\n\nvar ThemeContext = createContext(defaultState);\n\nvar DarkThemeProvider = function DarkThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(darkness),\n      _useState2 = _slicedToArray(_useState, 2),\n      dark = _useState2[0],\n      setDarkState = _useState2[1];\n\n  var toggleDark = function toggleDark() {\n    setDarkState(!dark);\n    localStorage.setItem(\"darkTheme\", dark);\n  };\n\n  var darkTheme = createMuiTheme({\n    palette: {\n      type: dark ? \"dark\" : \"light\"\n    }\n  });\n  console.log(dark);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      dark: dark,\n      toggleDark: toggleDark\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: darkTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport { ThemeContext, DarkThemeProvider };","map":{"version":3,"sources":["/home/rohith/Documents/Projects/keeps-backend/client/src/context/darkTheme.js"],"names":["React","useState","createContext","createMuiTheme","ThemeProvider","grey","defaultState","dark","toggleDark","darkness","localStorage","getItem","ThemeContext","DarkThemeProvider","children","setDarkState","setItem","darkTheme","palette","type","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C,C,CACA;;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,UAAU,EAAE,sBAAM,CAAE;AAFD,CAArB;AAIA,IAAIC,QAAQ,GAAG,KAAf;;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACrCF,EAAAA,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AACD;;AAED,IAAMC,YAAY,GAAGV,aAAa,CAACI,YAAD,CAAlC;;AAEA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACbb,QAAQ,CAACQ,QAAD,CADK;AAAA;AAAA,MACnCF,IADmC;AAAA,MAC7BQ,YAD6B;;AAE1C,MAAMP,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBO,IAAAA,YAAY,CAAC,CAACR,IAAF,CAAZ;AACAG,IAAAA,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCT,IAAlC;AACD,GAHD;;AAKA,MAAMU,SAAS,GAAGd,cAAc,CAAC;AAC/Be,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEZ,IAAI,GAAG,MAAH,GAAY;AADf;AADsB,GAAD,CAAhC;AAKAa,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,UAAU,EAAVA;AAAR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAES,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCH,QAAlC,CADF,CADF;AAKD,CAlBD;;AAoBA,SAASF,YAAT,EAAuBC,iBAAvB","sourcesContent":["import React, { useState, createContext } from \"react\";\n// import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst defaultState = {\n  dark: false,\n  toggleDark: () => {},\n};\nlet darkness = false;\nif (localStorage.getItem(\"darkTheme\")) {\n  darkness = localStorage.getItem(\"darkTheme\");\n}\n\nconst ThemeContext = createContext(defaultState);\n\nconst DarkThemeProvider = ({ children }) => {\n  const [dark, setDarkState] = useState(darkness);\n  const toggleDark = () => {\n    setDarkState(!dark);\n    localStorage.setItem(\"darkTheme\", dark);\n  };\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: dark ? \"dark\" : \"light\",\n    },\n  });\n  console.log(dark);\n  return (\n    <ThemeContext.Provider value={{ dark, toggleDark }}>\n      <ThemeProvider theme={darkTheme}>{children}</ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, DarkThemeProvider };\n"]},"metadata":{},"sourceType":"module"}