{"ast":null,"code":"var _jsxFileName = \"/home/rohith/Documents/Projects/keeps-backend/client/src/ApolloProvider.js\";\nimport React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nvar httpLink = createHttpLink({\n  uri: \"http://localhost:5000\"\n});\nvar authLink = setContext(function () {\n  var token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? \"Bearer \".concat(token) : \"\"\n    }\n  };\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/home/rohith/Documents/Projects/keeps-backend/client/src/ApolloProvider.js"],"names":["React","App","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","setContext","httpLink","uri","authLink","token","localStorage","getItem","headers","Authorization","client","link","concat","cache"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,IAAMC,QAAQ,GAAGH,UAAU,CAAC,YAAM;AAChC,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEJ,KAAK,oBAAaA,KAAb,IAAuB;AADpC;AADJ,GAAP;AAKD,CAP0B,CAA3B;AASA,IAAMK,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADwB;AAE9BW,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFuB,CAAjB,CAAf;AAKA,4BACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF","sourcesContent":["import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000\",\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}